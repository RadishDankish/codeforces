check range of numbers stored in ARRAY as they can be very big.
to check if power of two (x&(x-1))==false then power of two;
to get last digit -> n%10
AM>=GM
sum of two sides of triangle > third side

To find prime we can find them in pairs and one of number is below sqrt(n)
----> other above so check only till sqrt(n)

sieve of erastothenes-> go to multiples of prime and mark them as non
prime, starting point is square of that number ex- for 7 start from 49
(initialize an array of n size and initially mark everything as 
prime and then start crossing out)

property of AP -> sum of terms equidistant from start and end are same 
always ex -> t1 + tn = t2 + t(n-1)

1,2,3...n is AP

xor properties-> a^a=0 & a^0=a

when taking numbers of range [n,n] it will be only n not n+non

GREEDY- for a problem which needs max or min result
choose locally optimal soln

first check i<n then any other conditions or it goes out of bound

look for precision issues for few functions like log and pow;



